# run pfcon unit tests (nosetests) and CUBE integration tests.
# If all tests pass, build a multi-arch image and push to DockerHub.

name: CI

on:
  push:
    branches: [ master ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches: [ master ]

jobs:
  test-pfcon:
    name: tests (pfcon)
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Start Docker Swarm
        run: docker swarm init --advertise-addr 127.0.0.1
      - name: Build and run tests
        run: ./make.sh -i
      - name: Tear down
        run: |
          ./unmake.sh
          sudo rm -fr ./CHRIS_REMOTE_FS
          docker swarm leave --force
  test-cube:
    name: tests (CUBE)
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: docker build -t localhost/fnndsc/pfcon .
      - uses: FNNDSC/cube-integration-action@master
        env:
          PFCON_IMAGE: localhost/fnndsc/pfcon

  build:
    needs: [test-pfcon, test-cube]
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Install pixi
      id: install-pixi
      if: startsWith(github.ref, 'refs/tags/v')
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.28.2
        run-install: false
    - name: Set version
      if: steps.install-pixi.outcome == 'success'
      run:
        ref_name='${{ github.ref_name }}'
        version_number="${ref_name:1}"
        pixi project version set "$version_number"
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          docker.io/fnndsc/pfcon
          ghcr.io/fnndsc/pfcon
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=pep440,pattern={{version}}
          type=pep440,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3
    - name: Login to DockerHub
      id: login-dockerhub
      if: github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Login to GitHub Container Registry
      id: login-ghcr
      if: github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        build-args: ENVIRONMENT=prod
        push: ${{ steps.login-dockerhub.outcome == 'success' && steps.login-ghcr.outcome == 'success' }}
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
