# https://docs.docker.com/compose/yml/
# Each service defined in docker-compose.yml must specify exactly one of
# image or build. Other keys are optional, and are analogous to their
# docker run command-line counterparts.
#
# As with docker run, options specified in the Dockerfile (e.g., CMD,
# EXPOSE, VOLUME, ENV) are respected by default - you don't need to
# specify them again in docker-compose.yml.
#

services:
  pfcon:
    image: localhost:5000/fnndsc/pfcon:dev
    build:
      context: ..
      target: dev
      args:
        ENVIRONMENT: local
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    # We need to mount a physical dir in the HOST onto the key store in pfcon. This dir
    # is given by the STOREBASE env variable substitution. The keystore can be specified
    # by the --storeBase flag during development.
    environment:
      - APPLICATION_MODE=development
      - PFCON_INNETWORK=true
      - STORAGE_ENV=swift
      - COMPUTE_VOLUME_TYPE=host
      - STOREBASE
      - CONTAINER_ENV=swarm
    volumes:
      - ${STOREBASE:?}:/var/local/storeBase:z
      - ../pfcon:/app/pfcon:z
      - ../tests:/app/tests:z
      - /var/run/docker.sock:/var/run/docker.sock:z
    ports:
      - "30006:5005"
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    depends_on:
      - swift_service
    networks:
      - remote
    labels:
      org.chrisproject.role: "pfcon"

  swift_service:
    image: ${SWIFTREPO:?}/docker-swift-onlyone
    init: true
    volumes:
      - swift_storage_dev:/srv
    environment:
      - SWIFT_USERNAME=chris:chris1234
      - SWIFT_KEY=testing
    ports:
      - "8080:8080"
    networks:
      - remote
    labels:
      name: "Swift"
      role: "Swift object storage service"


networks:
  remote:

volumes:
  swift_storage_dev:
